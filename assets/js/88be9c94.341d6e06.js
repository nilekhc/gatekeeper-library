"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6014],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),g=i,v=m["".concat(s,".").concat(g)]||m[g]||u[g]||r;return n?a.createElement(v,l(l({ref:t},c),{},{components:n})):a.createElement(v,l({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5356:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={id:"mutation-allow-privilege-escalation",title:"allow-privilege-escalation"},l="allow-privilege-escalation",o={unversionedId:"mutation-allow-privilege-escalation",id:"mutation-allow-privilege-escalation",title:"allow-privilege-escalation",description:"Usage",source:"@site/docs/mutation-allow-privilege-escalation.md",sourceDirName:".",slug:"/mutation-allow-privilege-escalation",permalink:"/gatekeeper-library/mutation-allow-privilege-escalation",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/mutation-allow-privilege-escalation.md",tags:[],version:"current",frontMatter:{id:"mutation-allow-privilege-escalation",title:"allow-privilege-escalation"},sidebar:"docs",previous:{title:"Volume Types",permalink:"/gatekeeper-library/volumes"},next:{title:"capabilities",permalink:"/gatekeeper-library/mutation-capabilities"}},s={},p=[{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"allow-privilege-escalation"},"allow-privilege-escalation"),(0,i.kt)("h3",{id:"usage"},"Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/mutation/pod-security-policy/allow-privilege-escalation/samples/mutation.yaml\n")),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: mutations.gatekeeper.sh/v1alpha1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.containers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.containers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n---\napiVersion: mutations.gatekeeper.sh/v1alpha1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation-init\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.initContainers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n---\napiVersion: mutations.gatekeeper.sh/v1alpha1\nkind: Assign\nmetadata:\n  name: k8spspdefaultallowprivilegeescalation-ephemeral\nspec:\n  applyTo:\n  - groups: [""]\n    kinds: ["Pod"]\n    versions: ["v1"]\n  location: "spec.ephemeralContainers[name:*].securityContext.allowPrivilegeEscalation"\n  parameters:\n    pathTests:\n    - subPath: "spec.ephemeralContainers[name:*].securityContext.allowPrivilegeEscalation"\n      condition: MustNotExist\n    assign:\n      value: false\n\n')))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[392],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=o,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||s;return t?r.createElement(b,a(a({ref:n},c),{},{components:t})):r.createElement(b,a({ref:n},c))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<s;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5345:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const s={id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role"},a="Block Endpoint Edit Default Role",l={unversionedId:"block-endpoint-edit-default-role",id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role",description:"Description",source:"@site/docs/block-endpoint-edit-default-role.md",sourceDirName:".",slug:"/block-endpoint-edit-default-role",permalink:"/gatekeeper-library/block-endpoint-edit-default-role",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/block-endpoint-edit-default-role.md",tags:[],version:"current",frontMatter:{id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role"},sidebar:"docs",previous:{title:"Automount Service Account Token for Pod",permalink:"/gatekeeper-library/automount-serviceaccount-token"},next:{title:"Block Services with type LoadBalancer",permalink:"/gatekeeper-library/block-loadbalancer-services"}},i={},p=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Examples",id:"examples",level:2}],c={toc:p};function d(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"block-endpoint-edit-default-role"},"Block Endpoint Edit Default Role"),(0,o.kt)("h2",{id:"description"},"Description"),(0,o.kt)("p",null,"Many Kubernetes installations by default have a system:aggregate-to-edit ClusterRole which does not properly restrict access to editing Endpoints. This ConstraintTemplate forbids the system:aggregate-to-edit ClusterRole from granting permission to create/patch/update Endpoints.\nClusterRole/system:aggregate-to-edit should not allow Endpoint edit permissions due to CVE-2021-25740, Endpoint & EndpointSlice permissions allow cross-Namespace forwarding, ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/issues/103675"},"https://github.com/kubernetes/kubernetes/issues/103675")),(0,o.kt)("h2",{id:"template"},"Template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sblockendpointeditdefaultrole\n  annotations:\n    metadata.gatekeeper.sh/title: "Block Endpoint Edit Default Role"\n    description: >-\n      Many Kubernetes installations by default have a system:aggregate-to-edit\n      ClusterRole which does not properly restrict access to editing Endpoints.\n      This ConstraintTemplate forbids the system:aggregate-to-edit ClusterRole\n      from granting permission to create/patch/update Endpoints.\n\n      ClusterRole/system:aggregate-to-edit should not allow\n      Endpoint edit permissions due to CVE-2021-25740, Endpoint & EndpointSlice\n      permissions allow cross-Namespace forwarding,\n      https://github.com/kubernetes/kubernetes/issues/103675\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sBlockEndpointEditDefaultRole\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8sblockendpointeditdefaultrole\n\n        violation[{"msg": msg}] {\n            input.review.object.metadata.name == "system:aggregate-to-edit"\n            endpointRule(input.review.object.rules[_])\n            msg := "ClusterRole system:aggregate-to-edit should not allow endpoint edit permissions. For k8s version < 1.22, the Cluster Role should be annotated with rbac.authorization.kubernetes.io/autoupdate=false to prevent autoreconciliation back to default permissions for this role."\n        }\n\n        endpointRule(rule) {\n            "endpoints" == rule.resources[_]\n            hasEditVerb(rule.verbs)\n        }\n\n        hasEditVerb(verbs) {\n            "create" == verbs[_]\n        }\n\n        hasEditVerb(verbs) {\n            "patch" == verbs[_]\n        }\n\n        hasEditVerb(verbs) {\n            "update" == verbs[_]\n        }\n\n')),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"block-endpoint-default-role"),(0,o.kt)("blockquote",null,(0,o.kt)("details",null,(0,o.kt)("summary",null,"constraint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sBlockEndpointEditDefaultRole\nmetadata:\n  name: block-endpoint-edit-default-role\nspec:\n  match:\n    kinds:\n      - apiGroups: ["rbac.authorization.k8s.io"]\n        kinds: ["ClusterRole"]\n\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"example-allowed"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  creationTimestamp: null\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    rbac.authorization.k8s.io/aggregate-to-edit: "true"\n  name: system:aggregate-to-edit\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  - secrets\n  - services/proxy\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ""\n  resources:\n  - serviceaccounts\n  verbs:\n  - impersonate\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - ""\n  resources:\n  - configmaps\n  - persistentvolumeclaims\n  - replicationcontrollers\n  - replicationcontrollers/scale\n  - secrets\n  - serviceaccounts\n  - services\n  - services/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - apps\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - replicasets\n  - replicasets/scale\n  - statefulsets\n  - statefulsets/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - autoscaling\n  resources:\n  - horizontalpodautoscalers\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - batch\n  resources:\n  - cronjobs\n  - jobs\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - extensions\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - ingresses\n  - networkpolicies\n  - replicasets\n  - replicasets/scale\n  - replicationcontrollers/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - policy\n  resources:\n  - poddisruptionbudgets\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  - networkpolicies\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"example-disallowed"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  creationTimestamp: null\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    rbac.authorization.k8s.io/aggregate-to-edit: "true"\n  name: system:aggregate-to-edit\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  - secrets\n  - services/proxy\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ""\n  resources:\n  - serviceaccounts\n  verbs:\n  - impersonate\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - ""\n  resources:\n  - configmaps\n  - persistentvolumeclaims\n  - replicationcontrollers\n  - replicationcontrollers/scale\n  - secrets\n  - serviceaccounts\n  - services\n  - services/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - apps\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - endpoints\n  - replicasets\n  - replicasets/scale\n  - statefulsets\n  - statefulsets/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n\n'))))))}d.isMDXComponent=!0}}]);